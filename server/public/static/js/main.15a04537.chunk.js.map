{"version":3,"sources":["components/ButtonMenu.js","components/Header.js","components/CircleButton.js","components/ClientCard.js","actions/clientActions.js","containers/ClientContainer.js","components/ProductCard.js","actions/productActions.js","containers/ProductContainer.js","components/OrderCard.js","containers/OrderContainer.js","actions/orderActions.js","components/App.js","serviceWorker.js","reducers/clientReducer.js","reducers/productReducer.js","reducers/orderReducer.js","reducers/index.js","configureStore.js","assets/theme.js","index.js","assets/icons/delete.svg","assets/icons/edit.svg","assets/icons/save.svg","assets/icons/addClient.svg","assets/icons/addProduct.svg","assets/icons/expand.svg","assets/icons/client.svg","assets/icons/addOrder.svg"],"names":["ButtonMenu","className","to","this","props","text","Component","Header","state","width","height","updateWindowDimensions","bind","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","headerStyle","justifyContent","style","CircleButton","imgStyle","title","onClick","alt","src","icon","ClientCard","nome","telefone","endereco","id","failure","cardStyle","leftStyle","backgroundColor","color","variant","leftIcon","editIcon","saveIcon","borderTop","alignSelf","margin","onLeftClick","TextField","label","fullWidth","error","Boolean","helperText","value","onChange","e","target","deleteIcon","onRightClick","fetchClients","page","dispatch","type","fetch","then","response","ok","json","Error","message","clients","fetchClientsSuccess","catch","createClient","client","options","method","body","JSON","stringify","headers","credentials","createClientSuccess","errorsInClient","failed","trim","ClientContainer","isAddingClient","failureMap","updateClient","deleteClient","undefined","boxShadow","addClientIcon","map","key","connect","updateClientSuccess","deleteClientSuccess","regex","isNumber","match","ProductCard","descricao","codigo","preco","InputProps","startAdornment","InputAdornment","position","multiline","rows","fetchProducts","products","fetchProductsSuccess","errorsInProduct","product","ProductContainer","isAddingProduct","createProduct","updateProduct","deleteProduct","parseFloat","addProductIcon","createProductSuccess","updateProductSuccess","deleteProductSuccess","OrderCard","status","selectedClient","total","isExpanded","addProduct","quantidade","valor","setProduct","getProduct","removeProduct","makeProductElement","makeAllProductElements","makeRemoveElements","getTotal","getOrder","loadProducts","length","isProductsLoaded","produtos","clienteId","parseInt","cliente","index","info","push","produtoId","valorUnitario","order","values","quantity","toFixed","unshift","splice","elements","Fragment","productOptions","Autocomplete","getOptionLabel","option","disableClearable","newValue","renderInput","params","dateString","date","data","Date","day","getUTCDate","toString","hours","getHours","minutes","getMinutes","getMonth","getFullYear","clientOptions","sizeAdjust","addStyle","specificsAttributes","disabled","clientNameField","clientAttributes","clientIcon","transform","expandIcon","errorsInOrderUpdate","clientFailure","OrderContainer","isAddingOrder","isClientsLoaded","createOrder","updateOrder","deleteOrder","makeOrders","errorsInOrder","fetchOrders","orderElements","orders","find","produto","item","valorTotal","loadOrderProducts","addOrderIcon","fetchOrdersSuccess","fetchOrderSuccess","createdOrder","createOrderSuccess","updateOrderSuccess","deleteOrderSuccess","App","path","exact","location","hostname","action","findIndex","reducers","productReducer","orderReducer","clientReducer","combineReducers","loggerMiddleware","createLogger","preloadedState","createMuiTheme","palette","primary","main","secondary","primaryAlternative","secondaryAlternative","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","ThemeProvider","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.15a04537.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport \"../assets/components/ButtonMenu.css\";\nimport {Link} from \"react-router-dom\";\n\nclass ButtonMenu extends Component {\n    render() {\n        return (\n            <div className=\"button-menu\">\n                <Link to={this.props.to}>{this.props.text}</Link>\n            </div>\n        );\n    }\n}\n\nexport default ButtonMenu;","import React, {Component} from 'react';\nimport \"../assets/components/Header.css\";\nimport ButtonMenu from \"./ButtonMenu\";\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {width: 0, height: 0};\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateWindowDimensions();\n        window.addEventListener('resize', this.updateWindowDimensions);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n\n    updateWindowDimensions() {\n        this.setState({width: window.innerWidth, height: window.innerHeight});\n    }\n\n    render() {\n        const headerStyle = {};\n        if(this.state.width <= 650)\n            headerStyle.justifyContent = \"center\";\n        return (\n            <div className=\"header\" style={headerStyle}>\n                {this.state.width > 650 &&\n                <div className=\"title\">\n                    <h2>Desafio Dourasoft</h2>\n                </div>\n                }\n                <div className=\"menu\">\n                    <ButtonMenu to=\"/clientes\" text=\"Clientes\"/>\n                    <ButtonMenu to=\"/produtos\" text=\"Produtos\"/>\n                    <ButtonMenu to=\"/pedidos\" text=\"Pedidos\"/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport \"../assets/components/CircleButton.css\";\n\nclass CircleButton extends Component {\n    render() {\n        const style = this.props.style || {};\n        const imgStyle = {};\n        imgStyle.height = (this.props.imgStyle && this.props.imgStyle.height) || style.height || 24;\n        imgStyle.width = (this.props.imgStyle && this.props.imgStyle.width) || style.width || 24;\n        return (\n            <div className=\"circle-button\" title={this.props.title} style={style} onClick={this.props.onClick}>\n                <img style={imgStyle} alt=\"\" src={this.props.icon}/>\n            </div>\n        );\n    }\n}\n\nexport default CircleButton;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport \"../assets/components/ClientCard.css\";\nimport CircleButton from \"./CircleButton\";\nimport deleteIcon from \"../assets/icons/delete.svg\";\nimport editIcon from \"../assets/icons/edit.svg\";\nimport saveIcon from \"../assets/icons/save.svg\";\n\nclass ClientCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nome: this.props.nome || \"\",\n            telefone: this.props.telefone || \"\",\n            endereco: this.props.endereco || \"\",\n            id: this.props.id\n        }\n    }\n\n    render() {\n        const failure = this.props.failure || {};\n        const cardStyle = {};\n        const leftStyle = {backgroundColor: \"rgb(242, 205, 141)\"};\n        const rightStyle = {\n            height: 30,\n            width: 30,\n            backgroundColor: \"rgb(245, 234, 138)\"\n        };\n        const color = this.props.variant === \"create\" ? \"secondary\" : \"primary\";\n        let leftIcon = editIcon;\n        if (this.props.variant === \"create\") {\n            leftIcon = saveIcon;\n            leftStyle.backgroundColor = \"rgb(97, 205, 187)\";\n            cardStyle.borderTop = \"6px solid rgb(244, 117, 96)\";\n        }\n        return (\n            <div className=\"client-card\" style={cardStyle}>\n                <div style={{alignSelf: \"flex-start\", margin: \"10px 0px 0px 10px\"}}>\n                    <CircleButton icon={leftIcon}\n                                  style={leftStyle}\n                                  onClick={() => this.props.onLeftClick && this.props.onLeftClick(this.state)}/>\n                </div>\n                <div className=\"attributes\">\n                    <div style={{width:200}}>\n                        <TextField color={color}\n                                   variant=\"filled\"\n                                   id={\"client_name\" + this.props.id}\n                                   label=\"Nome\"\n                                   fullWidth\n                                   error={Boolean(failure.nome)}\n                                   helperText={failure.nome}\n                                   value={this.state.nome}\n                                   onChange={e => this.setState({nome: e.target.value})}/>\n                    </div>\n                    <div style={{width:200}}>\n                        <TextField color={color}\n                                   variant=\"filled\"\n                                   id={\"address\" + this.props.id}\n                                   label=\"Endereço\"\n                                   fullWidth\n                                   error={Boolean(failure.endereco)}\n                                   helperText={failure.endereco}\n                                   value={this.state.endereco}\n                                   onChange={e => this.setState({endereco: e.target.value})}/>\n                    </div>\n                    <div style={{width:200}}>\n                        <TextField color={color}\n                                   variant=\"filled\"\n                                   fullWidth\n                                   id={\"phone\" + this.props.id}\n                                   label=\"Telefone\"\n                                   value={this.state.telefone}\n                                   onChange={e => this.setState({telefone: e.target.value})}/>\n                    </div>\n                </div>\n                <div style={{alignSelf: \"flex-start\", margin: \"10px 10px 0px 0px\"}}>\n                    <CircleButton icon={deleteIcon}\n                                  style={rightStyle}\n                                  onClick={this.props.onRightClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ClientCard;","import fetch from \"cross-fetch\";\n\nexport const FETCH_CLIENTS_REQUEST = \"FETCH_CLIENTS_REQUEST\";\nexport const FETCH_CLIENTS_SUCCESS = \"FETCH_CLIENTS_SUCCESS\";\nexport const FETCH_CLIENTS_FAILURE = \"FETCH_CLIENTS_FAILURE\";\n\nexport const CREATE_CLIENT_REQUEST = \"CREATE_CLIENT_REQUEST\";\nexport const CREATE_CLIENT_SUCCESS = \"CREATE_CLIENT_SUCCESS\";\nexport const CREATE_CLIENT_FAILURE = \"CREATE_CLIENT_FAILURE\";\n\nexport const UPDATE_CLIENT_REQUEST = \"UPDATE_CLIENT_REQUEST\";\nexport const UPDATE_CLIENT_SUCCESS = \"UPDATE_CLIENT_SUCCESS\";\nexport const UPDATE_CLIENT_FAILURE = \"UPDATE_CLIENT_FAILURE\";\n\nexport const DELETE_CLIENT_REQUEST = \"DELETE_CLIENT_REQUEST\";\nexport const DELETE_CLIENT_SUCCESS = \"DELETE_CLIENT_SUCCESS\";\nexport const DELETE_CLIENT_FAILURE = \"DELETE_CLIENT_FAILURE\";\n\nexport const deleteClientFailure = message => ({\n    message,\n    type: DELETE_CLIENT_FAILURE\n});\n\nexport const deleteClientSuccess = id => ({\n    id,\n    type: DELETE_CLIENT_SUCCESS\n});\n\nexport const deleteClientRequest = () => ({\n    type: DELETE_CLIENT_REQUEST\n});\n\nexport const updateClientFailure = message => ({\n    message,\n    type: UPDATE_CLIENT_FAILURE\n});\n\nexport const updateClientSuccess = client => ({\n    client,\n    type: UPDATE_CLIENT_SUCCESS\n});\n\nexport const updateClientRequest = () => ({\n    type: UPDATE_CLIENT_REQUEST\n});\n\nexport const createClientFailure = message => ({\n    message,\n    type: CREATE_CLIENT_FAILURE\n});\n\nexport const createClientSuccess = client => ({\n    client,\n    type: CREATE_CLIENT_SUCCESS\n});\n\nexport const createClientRequest = () => ({\n    type: CREATE_CLIENT_REQUEST\n});\n\nexport const fetchClientsFailure = message => ({\n    message,\n    type: FETCH_CLIENTS_FAILURE\n});\n\nexport const fetchClientsSuccess = (clients, page) => ({\n    clients,\n    page,\n    type: FETCH_CLIENTS_SUCCESS\n});\n\nexport const fetchClientsRequest = () => ({\n    type: FETCH_CLIENTS_REQUEST\n});\n\nexport const fetchClients = page => dispatch => {\n    dispatch(fetchClientsRequest());\n    return fetch(\"/api/clientes\")\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(clients => dispatch(fetchClientsSuccess(clients, page)))\n        .catch(error => dispatch(fetchClientsFailure(error.message)));\n};\n\nexport const createClient = client => dispatch => {\n    dispatch(createClientRequest());\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(client),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(\"/api/clientes\", options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(client => {\n            dispatch(createClientSuccess(client));\n            return client;\n        })\n        .catch(error => dispatch(createClientFailure(error.message)));\n};\n\nexport const updateClient = (client) => dispatch => {\n    if (!client)\n        return;\n    dispatch(updateClientRequest());\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(client),\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/clientes/${client.id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(client => dispatch(updateClientSuccess(client)))\n        .catch(error => dispatch(updateClientFailure(error.message)));\n\n};\n\nexport const deleteClient = id => dispatch => {\n    if (!id && id !== 0)\n        return;\n    dispatch(deleteClientRequest());\n    const options = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/clientes/${id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(() => dispatch(deleteClientSuccess(id)))\n        .catch(error => dispatch(deleteClientFailure(error.message)));\n};","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport \"../assets/containers/index.css\";\nimport ClientCard from \"../components/ClientCard\";\nimport CircleButton from \"../components/CircleButton\";\nimport addClientIcon from \"../assets/icons/addClient.svg\";\nimport {createClient, deleteClient, fetchClients, updateClient} from \"../actions/clientActions\";\n\nexport const errorsInClient = client => {\n    const failure = {};\n    let failed = false;\n    if (!client)\n        return failure;\n    if (!client.nome || !client.nome.trim()) {\n        failure.nome = \"Nome Iválido\";\n        failed = true;\n    }\n    if (!client.endereco || !client.endereco.trim()) {\n        failure.endereco = \"Endereco Inválido\";\n        failed = true;\n    }\n    return failed ? failure : false;\n}\n\nconst mapStateToProps = (state) => {\n    return {clients: state.clients};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchClients: () => dispatch(fetchClients(1)),\n        createClient: client => dispatch(createClient(client)),\n        updateClient: client => dispatch(updateClient(client)),\n        deleteClient: id => dispatch(deleteClient(id))\n    };\n}\n\nclass ClientContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isAddingClient: false, failureMap: {}};\n        this.createClient = this.createClient.bind(this);\n        this.updateClient = this.updateClient.bind(this);\n        this.deleteClient = this.deleteClient.bind(this);\n    }\n\n    createClient(client) {\n        const failure = errorsInClient(client);\n        if (!failure) {\n            this.props.createClient(client).then(this.setState({isAddingClient: false}));\n            const failureMap = this.state.failureMap;\n            failureMap[client.id || -1] = undefined;\n            this.setState({failureMap});\n        } else {\n            const failureMap = this.state.failureMap;\n            failureMap[client.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    updateClient(client) {\n        const failure = errorsInClient(client);\n        if (!failure) {\n            this.props.updateClient(client);\n            const failureMap = this.state.failureMap;\n            failureMap[client.id || -1] = undefined;\n            this.setState({failureMap});\n        } else {\n            const failureMap = this.state.failureMap;\n            failureMap[client.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    deleteClient(id) {\n        if (id)\n            this.props.deleteClient(id);\n    }\n\n    componentDidMount() {\n        this.props.fetchClients();\n    }\n\n    render() {\n        const addStyle = {\n            width: 40,\n            height: 40,\n            backgroundColor: \"rgb(244, 117, 96)\",\n            boxShadow: \"0 3px 6px rgba(0, 0, 0, .16), 0 1px 2px rgba(0, 0, 0, .23)\"\n        };\n        return (\n            <div className=\"container\">\n                <div className=\"container-actions\">\n                    {!this.state.isAddingClient &&\n                    <CircleButton style={addStyle} imgStyle={{width: 32, height: 32}} icon={addClientIcon}\n                                  onClick={() => this.setState({isAddingClient: true})}/>\n                    }\n                </div>\n                <div className=\"card-list\">\n                    {this.state.isAddingClient &&\n                    <ClientCard variant=\"create\"\n                                id=\"create_client\"\n                                failure={this.state.failureMap[\"create_client\"]}\n                                onLeftClick={this.createClient}\n                                onRightClick={() => this.setState({isAddingClient: false})}/>\n                    }\n                    {this.props.clients.map(client => <ClientCard key={client.id}\n                                                                  nome={client.nome}\n                                                                  endereco={client.endereco}\n                                                                  telefone={client.telefone}\n                                                                  failure={this.state.failureMap[client.id]}\n                                                                  id={client.id}\n                                                                  onRightClick={() => this.deleteClient(client.id)}\n                                                                  onLeftClick={this.updateClient}/>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ClientContainer);","import React, {Component} from 'react';\nimport \"../assets/components/ProductCard.css\";\nimport editIcon from \"../assets/icons/edit.svg\";\nimport saveIcon from \"../assets/icons/save.svg\";\nimport CircleButton from \"./CircleButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport deleteIcon from \"../assets/icons/delete.svg\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst regex = /^\\d+(\\.?\\d*)$/\nexport const isNumber = (text) => {\n    return text.match(regex) || !text.trim();\n};\n\nclass ProductCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nome: this.props.nome || \"\",\n            descricao: this.props.descricao || \"\",\n            codigo: this.props.codigo || \"\",\n            preco: this.props.preco ? this.props.preco + \"\" : \"\",\n            id: this.props.id\n        }\n    }\n\n    render() {\n        const failure = this.props.failure || {};\n        const cardStyle = {};\n        const leftStyle = {backgroundColor: \"rgb(242, 205, 141)\"};\n        const rightStyle = {\n            height: 30,\n            width: 30,\n            backgroundColor: \"rgb(245, 234, 138)\"\n        };\n        const color = this.props.variant === \"create\" ? \"secondary\" : \"primary\";\n        let leftIcon = editIcon;\n        if (this.props.variant === \"create\") {\n            leftIcon = saveIcon;\n            leftStyle.backgroundColor = \"rgb(97, 205, 187)\";\n            cardStyle.borderTop = \"6px solid rgb(244, 117, 96)\";\n        }\n        return (\n            <div className=\"client-card\" style={cardStyle}>\n                <div style={{alignSelf: \"flex-start\", margin: \"10px 0px 0px 10px\"}}>\n                    <CircleButton icon={leftIcon}\n                                  style={leftStyle}\n                                  onClick={() => this.props.onLeftClick && this.props.onLeftClick(this.state)}/>\n                </div>\n                <div className=\"attributes\">\n                    <div style={{width: 200}}>\n                        <TextField color={color}\n                                   id={\"product_name\" + this.props.id}\n                                   variant=\"filled\"\n                                   fullWidth\n                                   label=\"Nome\"\n                                   error={Boolean(failure.nome)}\n                                   helperText={failure.nome}\n                                   value={this.state.nome}\n                                   onChange={e => this.setState({nome: e.target.value})}/>\n                    </div>\n                    <div style={{width: 200}}>\n                        <TextField color={color}\n                                   id={\"code\" + this.props.id}\n                                   variant=\"filled\"\n                                   fullWidth\n                                   error={Boolean(failure.codigo)}\n                                   helperText={failure.codigo}\n                                   label=\"Codigo\"\n                                   value={this.state.codigo}\n                                   onChange={e => this.setState({codigo: e.target.value})}/>\n                    </div>\n                    <div style={{width: 200}}>\n                        <TextField color={color}\n                                   id={\"price\" + this.props.id}\n                                   variant=\"filled\"\n                                   fullWidth\n                                   error={Boolean(failure.preco)}\n                                   helperText={failure.preco}\n                                   InputProps={{\n                                       startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                                   }}\n                                   label=\"Preço\"\n                                   value={this.state.preco}\n                                   onChange={e => isNumber(e.target.value) && this.setState({preco: e.target.value})}/>\n                    </div>\n                    <div style={{width: 200}}>\n                        <TextField color={color}\n                                   id={\"description\" + this.props.id}\n                                   variant=\"filled\"\n                                   multiline\n                                   rows={4}\n                                   label=\"Descrição\"\n                                   fullWidth\n                                   value={this.state.descricao}\n                                   onChange={e => this.setState({descricao: e.target.value})}/>\n                    </div>\n                </div>\n                <div style={{alignSelf: \"flex-start\", margin: \"10px 10px 0px 0px\"}}>\n                    <CircleButton icon={deleteIcon}\n                                  style={rightStyle}\n                                  onClick={this.props.onRightClick}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProductCard;","import fetch from \"cross-fetch\";\n\nexport const FETCH_PRODUCTS_REQUEST = \"FETCH_PRODUCTS_REQUEST\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAILURE = \"FETCH_PRODUCTS_FAILURE\";\n\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\";\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\nexport const CREATE_PRODUCT_FAILURE = \"CREATE_PRODUCT_FAILURE\";\n\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\";\nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\";\nexport const UPDATE_PRODUCT_FAILURE = \"UPDATE_PRODUCT_FAILURE\";\n\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\";\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\nexport const DELETE_PRODUCT_FAILURE = \"DELETE_PRODUCT_FAILURE\";\n\nexport const deleteProductFailure = message => ({\n    message,\n    type: DELETE_PRODUCT_FAILURE\n});\n\nexport const deleteProductSuccess = id => ({\n    id,\n    type: DELETE_PRODUCT_SUCCESS\n});\n\nexport const deleteProductRequest = () => ({\n    type: DELETE_PRODUCT_REQUEST\n});\n\nexport const updateProductFailure = message => ({\n    message,\n    type: UPDATE_PRODUCT_FAILURE\n});\n\nexport const updateProductSuccess = product => ({\n    product,\n    type: UPDATE_PRODUCT_SUCCESS\n});\n\nexport const updateProductRequest = () => ({\n    type: UPDATE_PRODUCT_REQUEST\n});\n\nexport const createProductFailure = message => ({\n    message,\n    type: CREATE_PRODUCT_FAILURE\n});\n\nexport const createProductSuccess = product => ({\n    product,\n    type: CREATE_PRODUCT_SUCCESS\n});\n\nexport const createProductRequest = () => ({\n    type: CREATE_PRODUCT_REQUEST\n});\n\nexport const fetchProductsFailure = message => ({\n    message,\n    type: FETCH_PRODUCTS_FAILURE\n});\n\nexport const fetchProductsSuccess = (products,page) => ({\n    products,\n    page,\n    type: FETCH_PRODUCTS_SUCCESS\n});\n\nexport const fetchProductsRequest = () => ({\n    type: FETCH_PRODUCTS_REQUEST\n});\n\nexport const fetchProducts = page => dispatch => {\n    dispatch(fetchProductsRequest());\n    return fetch(\"/api/produtos\")\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(products => dispatch(fetchProductsSuccess(products, page)))\n        .catch(error => dispatch(fetchProductsFailure(error.message)));\n};\n\nexport const createProduct = product => dispatch => {\n    dispatch(createProductRequest());\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(product),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(\"/api/produtos\", options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(product => dispatch(createProductSuccess(product)))\n        .catch(error => dispatch(createProductFailure(error.message)));\n};\n\nexport const updateProduct = (product) => dispatch => {\n    if (!product)\n        return;\n    dispatch(updateProductRequest());\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(product),\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/produtos/${product.id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(product => dispatch(updateProductSuccess(product)))\n        .catch(error => dispatch(updateProductFailure(error.message)));\n\n};\n\nexport const deleteProduct = id => dispatch => {\n    if (!id && id !== 0)\n        return;\n    dispatch(deleteProductRequest());\n    const options = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/produtos/${id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(() => dispatch(deleteProductSuccess(id)))\n        .catch(error => dispatch(deleteProductFailure(error.message)));\n};","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport \"../assets/containers/index.css\";\nimport ProductCard from \"../components/ProductCard\";\nimport CircleButton from \"../components/CircleButton\";\nimport addProductIcon from \"../assets/icons/addProduct.svg\";\nimport {createProduct, deleteProduct, fetchProducts, updateProduct} from \"../actions/productActions\";\n\nconst errorsInProduct = product => {\n    const failure = {};\n    let failed = false;\n    if (!product)\n        return failure;\n    if (!product.nome || !product.nome.trim()) {\n        failure.nome = \"Nome Iválido\";\n        failed = true;\n    }\n    if (!product.codigo || !product.codigo.trim()) {\n        failure.codigo = \"Código Inválido\";\n        failed = true;\n    }\n    if (!product.preco || !product.preco.trim()) {\n        failure.preco = \"Preço Inválido\";\n        failed = true;\n    }\n    return failed ? failure : false;\n}\n\nconst mapStateToProps = (state) => {\n    return {products: state.products};\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchProducts: () => dispatch(fetchProducts(1)),\n        createProduct: product => dispatch(createProduct(product)),\n        updateProduct: product => dispatch(updateProduct(product)),\n        deleteProduct: id => dispatch(deleteProduct(id))\n    };\n}\n\nclass ProductContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isAddingProduct: false,failureMap: {}};\n        this.createProduct = this.createProduct.bind(this);\n        this.updateProduct = this.updateProduct.bind(this);\n        this.deleteProduct = this.deleteProduct.bind(this);\n    }\n\n    createProduct(product) {\n        const failure = errorsInProduct(product);\n        if (!failure) {\n            product = {...product};\n            product.preco = parseFloat(product.preco);\n            this.props.createProduct(product).then(this.setState({isAddingProduct: false}));\n            const failureMap = this.state.failureMap;\n            failureMap[product.id || -1] = undefined;\n            this.setState({failureMap});\n        }else {\n            const failureMap = this.state.failureMap;\n            failureMap[product.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    updateProduct(product) {\n        const failure = errorsInProduct(product);\n        if (!failure) {\n            product = {...product};\n            product.preco = parseFloat(product.preco);\n            this.props.updateProduct(product);\n            const failureMap = this.state.failureMap;\n            failureMap[product.id || -1] = undefined;\n            this.setState({failureMap});\n        }else {\n            const failureMap = this.state.failureMap;\n            failureMap[product.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    deleteProduct(id) {\n        if (id)\n            this.props.deleteProduct(id);\n    }\n\n    componentDidMount() {\n        this.props.fetchProducts();\n    }\n\n    render() {\n        const addStyle = {\n            width: 40,\n            height: 40,\n            backgroundColor: \"rgb(244, 117, 96)\",\n            boxShadow: \"0 3px 6px rgba(0, 0, 0, .16), 0 1px 2px rgba(0, 0, 0, .23)\"\n        };\n        return (\n            <div className=\"container\">\n                <div className=\"container-actions\">\n                    {!this.state.isAddingProduct &&\n                    <CircleButton style={addStyle} imgStyle={{height: 32, width: 32}} icon={addProductIcon}\n                                  onClick={() => this.setState({isAddingProduct: true})}/>\n                    }\n                </div>\n                <div className=\"card-list\">\n                    {this.state.isAddingProduct &&\n                    <ProductCard variant=\"create\"\n                                 id={\"create_product\"}\n                                 failure={this.state.failureMap[\"create_product\"]}\n                                 onLeftClick={this.createProduct}\n                                 onRightClick={() => this.setState({isAddingProduct: false})}/>\n                    }\n                    {this.props.products.map(product => <ProductCard key={product.id}\n                                                                     nome={product.nome}\n                                                                     codigo={product.codigo}\n                                                                     preco={product.preco}\n                                                                     descricao={product.descricao}\n                                                                     id={product.id}\n                                                                     failure={this.state.failureMap[product.id]}\n                                                                     onRightClick={() => this.deleteProduct(product.id)}\n                                                                     onLeftClick={this.updateProduct}/>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ProductContainer);","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport \"../assets/components/OrderCard.css\";\nimport CircleButton from \"./CircleButton\";\nimport deleteIcon from \"../assets/icons/delete.svg\";\nimport editIcon from \"../assets/icons/edit.svg\";\nimport saveIcon from \"../assets/icons/save.svg\";\nimport expandIcon from \"../assets/icons/expand.svg\";\nimport addClientIcon from \"../assets/icons/addClient.svg\";\nimport addProductIcon from \"../assets/icons/addProduct.svg\";\nimport clientIcon from \"../assets/icons/client.svg\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {isNumber} from \"./ProductCard\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n\nclass OrderCard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            status: this.props.status || \"Aberto\",\n            selectedClient: this.props.client || null,\n            total: this.props.total || \"\",\n            nome: this.props.nome || \"\",\n            telefone: this.props.telefone || \"\",\n            endereco: this.props.endereco || \"\",\n            id: this.props.id,\n            isExpanded: false,\n            createClient: false,\n            products: [],\n            addProduct: {\n                nome: \"\",\n                quantidade: \"\",\n                valor: \"\"\n            }\n        }\n        this.setProduct = this.setProduct.bind(this);\n        this.getProduct = this.getProduct.bind(this);\n        this.addProduct = this.addProduct.bind(this);\n        this.removeProduct = this.removeProduct.bind(this);\n        this.makeProductElement = this.makeProductElement.bind(this);\n        this.makeAllProductElements = this.makeAllProductElements.bind(this);\n        this.makeRemoveElements = this.makeRemoveElements.bind(this);\n        this.getTotal = this.getTotal.bind(this);\n        this.getOrder = this.getOrder.bind(this);\n        this.loadProducts = this.loadProducts.bind(this);\n    }\n\n    loadProducts() {\n        let products = this.state.products;\n        if (products && products.length === 0 && this.props.products && this.props.products.length > 0)\n            products = [...this.props.products];\n        if (!this.props.loadProducts)\n            return this.setState({\n                isExpanded: !this.state.isExpanded,\n                isProductsLoaded: true,\n                products\n            });\n        else if (this.state.isExpanded)\n            return this.setState({isExpanded: false, products});\n        this.props.loadProducts().then(() => this.setState({\n            products: [...this.props.products],\n            isExpanded: true,\n            isProductsLoaded: true\n        }));\n    }\n\n    getOrder() {\n        const produtos = [];\n        const clienteId = this.state.selectedClient && parseInt(this.state.selectedClient.id);\n        const cliente = {nome: this.state.nome, endereco: this.state.endereco, telefone: this.state.telefone};\n        const status = this.state.status;\n        for (let index = -1; index < this.state.products.length; index++) {\n            const product = this.getProduct(index);\n            if (product.info)\n                produtos.push({\n                    produtoId: parseInt(product.info.id),\n                    quantidade: parseInt(product.quantidade),\n                    valorUnitario: parseFloat(product.valor)\n                });\n        }\n        const order = {status}\n        if (this.state.isProductsLoaded)\n            order.produtos = produtos;\n        if (this.props.id || this.props.id === 0)\n            order.id = this.props.id;\n        if (this.state.createClient)\n            order.cliente = cliente\n        else\n            order.clienteId = clienteId;\n        return order;\n    }\n\n    setProduct(id, values) {\n        if (id === -1)\n            this.setState({addProduct: {...this.state.addProduct, ...values}});\n        else if (id < this.state.products.length && id >= 0) {\n            const products = this.state.products;\n            products[id] = {...products[id], ...values};\n            this.setState({products});\n        }\n    }\n\n    getProduct(id) {\n        if (id === -1)\n            return this.state.addProduct;\n        else if (id < this.state.products.length && id >= 0)\n            return this.state.products[id];\n        else\n            return {};\n    }\n\n    getTotal() {\n        let total = 0;\n        for (let index = -1; index < this.state.products.length; index++) {\n            const product = this.getProduct(index);\n            const quantity = parseInt(product.quantidade);\n            const value = parseFloat(product.valor);\n            if (value && quantity)\n                total += value * quantity;\n        }\n        return total && total.toFixed(2);\n    }\n\n    addProduct() {\n        if (!(this.state.addProduct && this.state.addProduct.info))\n            return;\n        const products = this.state.products;\n        const addProduct = {\n            nome: \"\",\n            quantidade: \"\",\n            valor: \"\"\n        };\n        products.unshift(this.state.addProduct);\n        this.setState({products, addProduct});\n    }\n\n    removeProduct(id) {\n        const products = this.state.products;\n        if (id < products.length && id >= 0) {\n            products.splice(id, 1);\n            this.setState({products})\n        }\n    }\n\n    makeRemoveElements() {\n        const elements = [];\n        const style = {\n            width: 30,\n            height: 30,\n            backgroundColor: \"rgb(244, 117, 96)\"\n        };\n        for (let index = 0; index < this.state.products.length; index++)\n            elements.push(\n                <React.Fragment key={index}>\n                    <div style={{height: 34}}/>\n                    <CircleButton style={style} icon={deleteIcon} onClick={() => this.removeProduct(index)}/>\n                </React.Fragment>\n            );\n        return elements;\n    }\n\n    makeAllProductElements() {\n        const elements = [];\n        for (let index = -1; index < this.state.products.length; index++)\n            elements.push(this.makeProductElement(index, index === -1 ? \"secondary\" : \"primary\"));\n        return elements\n    }\n\n    makeProductElement(id, color) {\n        const productOptions = this.props.productOptions || [];\n        const product = this.getProduct(id);\n        return (\n            <div key={this.state.products.length - id} className=\"products-attributes\">\n                <div>\n                    <Autocomplete\n                        id={\"auto_product_name\" + this.props.id + \"\" + id}\n                        options={productOptions}\n                        getOptionLabel={(option) => option.nome}\n                        disableClearable\n                        value={product.info ? product.info : null}\n                        onChange={(e, newValue) => this.setProduct(id, {\n                            valor: newValue && newValue.preco ? newValue.preco : \"\",\n                            quantidade: \"\" + (parseInt(product.quantidade) || 1),\n                            info: newValue\n                        })}\n                        style={{width: 200}}\n                        renderInput={(params) => (\n                            <TextField {...params} color={color}\n                                       variant=\"filled\"\n                                       label=\"Produto\"/>)}/>\n                </div>\n                <div style={{width: 200}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               id={\"product_quantity\" + this.props.id + \"\" + id}\n                               label=\"Quantidade\"\n                               type=\"number\"\n                               value={product.quantidade}\n                               onChange={e => parseInt(e.target.value) > 0 && this.setProduct(id, {quantidade: \"\" + parseInt(e.target.value)})\n                               }/>\n                </div>\n                <div style={{width: 200}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               id={\"value\" + this.props.id + \"\" + id}\n                               label=\"Valor Unitário\"\n                               value={product.valor}\n                               InputProps={{\n                                   startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                               }}\n                               onChange={e => isNumber(e.target.value) && e.target.value >= 0 && this.setProduct(id, {valor: e.target.value})}/>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let dateString = \"\";\n        const date = this.props.data && new Date(this.props.data);\n        if (date) {\n            let day = date.getUTCDate().toString();\n            let hours = date.getHours().toString();\n            let minutes = date.getMinutes().toString();\n            hours = hours.length === 1 ? \"0\" + hours : hours;\n            minutes = minutes.length === 1 ? \"0\" + minutes : minutes;\n            day = day.length === 1 ? \"0\" + day : day\n            dateString = `${day}/${date.getMonth() + 1}/${date.getFullYear()} - ${hours}:${minutes}`\n        }\n        const clientOptions = this.props.clientOptions || [];\n        let sizeAdjust = 0;\n        if (this.props.failure) {\n            if (this.props.failure.clienteId)\n                sizeAdjust = 22;\n            else if (this.props.failure.cliente)\n                if (this.props.failure.cliente.endereco || this.props.failure.cliente.nome)\n                    sizeAdjust = 22;\n        }\n        const color = this.props.variant === \"create\" ? \"secondary\" : \"primary\";\n        const cardStyle = {};\n        const leftStyle = {backgroundColor: \"rgb(242, 205, 141)\"};\n        const rightStyle = {\n            height: 30,\n            width: 30,\n            backgroundColor: \"rgb(245, 234, 138)\"\n        };\n        const addStyle = {\n            width: 30,\n            height: 30,\n            backgroundColor: \"rgb(247, 152, 136)\"\n        };\n        const expandStyle = {\n            width: 30,\n            height: 30,\n            backgroundColor: \"rgb(247, 152, 136)\"\n        };\n        const contractStyle = {\n            width: 30,\n            height: 30,\n            backgroundColor: \"rgb(244, 117, 96)\",\n            transform: \"rotate(180deg)\"\n        }\n        let leftIcon = editIcon;\n        if (this.props.variant === \"create\") {\n            leftIcon = saveIcon;\n            leftStyle.backgroundColor = \"rgb(97, 205, 187)\";\n            cardStyle.borderTop = \"6px solid rgb(244, 117, 96)\";\n        } else {\n            switch (this.state.status) {\n                case \"Aberto\":\n                    cardStyle.borderTop = \"6px solid rgb(241, 225, 91)\";\n                    break;\n                case \"Entregue\":\n                    cardStyle.borderTop = \"6px solid rgb(97, 205, 187)\";\n                    break;\n                case \"Cancelado\":\n                    cardStyle.borderTop = \"6px solid rgb(232, 168, 56)\";\n                    break;\n                default:\n            }\n        }\n\n        const specificsAttributes = (\n            <div className=\"order-specifics\" style={{width: this.props.data ? 446 : 266}}>\n                <div>\n                    <Autocomplete\n                        id={\"auto_status\" + this.props.id}\n                        options={[\"Aberto\", \"Entregue\", \"Cancelado\"]}\n                        disableClearable\n                        value={this.state.status}\n                        onChange={(e, newValue) => this.setState({status: newValue})}\n                        style={{width: 133}}\n                        renderInput={(params) => (\n                            <TextField {...params} color={color}\n                                       variant=\"filled\"\n                                       fullWidth\n                                       id={\"status\" + this.props.id}\n                                       label=\"Status\"/>\n                        )}/>\n                </div>\n                <div style={{width: 103}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               id={\"total\" + this.props.id}\n                               label=\"Total\"\n                               fullWidth\n                               disabled\n                               InputProps={{\n                                   startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                               }}\n                               value={this.state.isProductsLoaded ? this.getTotal() : this.state.total}/>\n                </div>\n                {this.props.data &&\n                < div style={{width: 162}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               id={\"date\" + this.props.id}\n                               label=\"Data\"\n                               fullWidth\n                               disabled\n                               value={dateString}/>\n                </div>}\n            </div>\n        );\n        const clientNameField = this.state.createClient ? (\n            <TextField color={color}\n                       variant=\"filled\"\n                       fullWidth\n                       id={\"client_name\" + this.props.id}\n                       label=\"Nome\"\n                       error={Boolean(this.props.failure && this.props.failure.cliente && this.props.failure.cliente.nome)}\n                       helperText={this.props.failure && this.props.failure.cliente && this.props.failure.cliente.nome}\n                       value={this.state.nome}\n                       onChange={e => this.setState({nome: e.target.value})}/>) : (\n            <Autocomplete\n                id={\"auto_client_name\" + this.props.id}\n                options={clientOptions}\n                getOptionLabel={(option) => option.nome}\n                disableClearable\n                value={this.state.selectedClient}\n                onChange={(e, newValue) => this.setState({selectedClient: newValue})}\n                style={{width: 200}}\n                renderInput={(params) => (\n                    <TextField {...params} color={color}\n                               variant=\"filled\"\n                               fullWidth\n                               error={Boolean(this.props.failure && this.props.failure.clienteId)}\n                               helperText={this.props.failure && this.props.failure.clienteId}\n                               id={\"client_name\" + this.props.id}\n                               label=\"Nome\"/>)}/>\n        );\n        const clientAttributes = (\n            <div className=\"client-attributes\">\n                <div style={{width: 200}}>\n                    {clientNameField}\n                </div>\n                <div style={{width: 200}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               fullWidth\n                               id={\"address\" + this.props.id}\n                               disabled={!this.state.createClient}\n                               error={Boolean(this.props.failure && this.props.failure.cliente && this.props.failure.cliente.endereco)}\n                               helperText={this.props.failure && this.props.failure.cliente && this.props.failure.cliente.endereco}\n                               label=\"Endereço\"\n                               value={this.state.createClient ? this.state.endereco : this.state.selectedClient ? this.state.selectedClient.endereco ? this.state.selectedClient.endereco : \"\" : \"\"}\n                               onChange={e => this.setState({endereco: e.target.value})}/>\n                </div>\n                <div style={{width: 200}}>\n                    <TextField color={color}\n                               variant=\"filled\"\n                               fullWidth\n                               id={\"phone\" + this.props.id}\n                               disabled={!this.state.createClient}\n                               label=\"Telefone\"\n                               value={\n                                   this.state.createClient ? this.state.telefone :\n                                       this.state.selectedClient ? this.state.selectedClient.telefone ?\n                                           this.state.selectedClient.telefone : \"\" : \"\"\n                               }\n                               onChange={e => this.setState({telefone: e.target.value})}/>\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"order-card\" style={cardStyle}>\n                <div style={{height: this.state.isExpanded ? 240 : 120}} className=\"order-buttons-left\">\n                    <CircleButton icon={leftIcon}\n                                  style={leftStyle}\n                                  onClick={() => this.props.onLeftClick && this.props.onLeftClick(this.getOrder())}/>\n                    <div style={{height: 57}}/>\n                    <CircleButton style={addStyle}\n                                  imgStyle={{height: 24, width: 24}}\n                                  icon={this.state.createClient ? clientIcon : addClientIcon}\n                                  title={this.state.createClient ? \"Utilizar lista de Clientes\" : \"Criar Cliente\"}\n                                  onClick={() => this.setState({\n                                      createClient: !this.state.createClient\n                                  })}/>\n                    <div style={{height: 47 + sizeAdjust}}/>\n                    <CircleButton style={addStyle}\n                                  imgStyle={{height: 24, width: 24}}\n                                  icon={addProductIcon}\n                                  onClick={this.addProduct}/>\n                </div>\n                <div className=\"order-attributes\">\n                    {specificsAttributes}\n                    {clientAttributes}\n                    <div style={{height: this.state.isExpanded ? 64 * (this.state.products.length + 1) : 0}}\n                         className=\"products-list\">\n                        {this.makeAllProductElements()}\n                    </div>\n                </div>\n                <div style={{height: this.state.isExpanded ? 240 + sizeAdjust + this.state.products.length * 64 : 120}}\n                     className=\"order-buttons-right\">\n                    <CircleButton icon={deleteIcon}\n                                  style={rightStyle}\n                                  onClick={this.props.onRightClick}/>\n                    <div style={{height: 57}}/>\n                    <CircleButton style={this.state.isExpanded ? expandStyle : contractStyle}\n                                  icon={expandIcon}\n                                  onClick={this.loadProducts}/>\n                    {this.state.isExpanded &&\n                    <React.Fragment>\n                        <div style={{height: 74 + sizeAdjust}}/>\n                        {this.makeRemoveElements()}\n                    </React.Fragment>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default OrderCard;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport \"../assets/containers/index.css\";\nimport OrderCard from \"../components/OrderCard\";\nimport {createClient, fetchClients} from \"../actions/clientActions\";\nimport {fetchProducts} from \"../actions/productActions\";\nimport CircleButton from \"../components/CircleButton\";\nimport addOrderIcon from \"../assets/icons/addOrder.svg\";\nimport {errorsInClient} from \"./ClientContainer\";\nimport {createOrder, deleteOrder, fetchOrders, loadOrderProducts, updateOrder} from \"../actions/orderActions\";\n\nconst errorsInOrder = order => {\n    const failure = errorsInOrderUpdate(order) || {};\n    let failed = false;\n    if (!order.produtos || order.produtos.length < 1) {\n        failed = true;\n        failure.produtos = \"Produtos Inválidos\";\n    }\n    return failed ? failure : false;\n}\n\nconst errorsInOrderUpdate = order => {\n    const failure = {};\n    let failed = false;\n    if (!order)\n        return failure;\n    if (order.cliente) {\n        const clientFailure = errorsInClient(order.cliente);\n        if (clientFailure) {\n            failed = true;\n            failure.cliente = clientFailure;\n        }\n    } else if (!order.clienteId && order.clienteId !== 0) {\n        failed = true;\n        failure.clienteId = \"Cliente Inválido\";\n    }\n    return failed ? failure : false;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        clients: state.clients,\n        products: state.products,\n        orders: state.orders\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchProducts: () => dispatch(fetchProducts(1)),\n        fetchClients: () => dispatch(fetchClients(1)),\n        fetchOrders: () => dispatch(fetchOrders(1)),\n        loadOrderProducts: id => dispatch(loadOrderProducts(id)),\n        createClient: client => dispatch(createClient(client)),\n        createOrder: order => dispatch(createOrder(order)),\n        updateOrder: order => dispatch(updateOrder(order)),\n        deleteOrder: id => dispatch(deleteOrder(id))\n    };\n}\n\nclass OrderContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isAddingOrder: false,\n            failureMap: {},\n            isClientsLoaded: false,\n            isProductsLoaded: false\n        }\n        this.createOrder = this.createOrder.bind(this);\n        this.updateOrder = this.updateOrder.bind(this);\n        this.deleteOrder = this.deleteOrder.bind(this);\n        this.makeOrders = this.makeOrders.bind(this);\n    }\n\n    createOrder(order) {\n        const failure = errorsInOrder(order);\n        if (!failure) {\n            if (order.cliente) {\n                this.props.createClient(order.cliente).then((client) => {\n                    if (client && client.id) {\n                        order.clienteId = client.id;\n                        this.props.createOrder(order).then(() => this.setState({isAddingOrder: false}));\n                    }\n                });\n            } else\n                this.props.createOrder(order).then(() => this.setState({isAddingOrder: false}));\n            const failureMap = this.state.failureMap;\n            failureMap[order.id || -1] = undefined;\n            this.setState({failureMap});\n        } else {\n            const failureMap = this.state.failureMap;\n            failureMap[order.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    updateOrder(order) {\n        const failure = errorsInOrderUpdate(order);\n        if (!failure) {\n            if (order.cliente) {\n                this.props.createClient(order.cliente).then((client) => {\n                    if (client && client.id) {\n                        order.clienteId = client.id;\n                        this.props.updateOrder(order);\n                    }\n                });\n            } else\n                this.props.updateOrder(order);\n            const failureMap = this.state.failureMap;\n            failureMap[order.id || -1] = undefined;\n            this.setState({failureMap});\n        } else {\n            const failureMap = this.state.failureMap;\n            failureMap[order.id || -1] = failure;\n            this.setState({failureMap});\n        }\n    }\n\n    deleteOrder(id) {\n        if (id || id === 0)\n            this.props.deleteOrder(id);\n    }\n\n\n    componentDidMount() {\n        this.props.fetchProducts().then(() => this.setState({isProductsLoaded: true}));\n        this.props.fetchClients().then(() => this.setState({isClientsLoaded: true}));\n        this.props.fetchOrders();\n    }\n\n    makeOrders() {\n        const orderElements = [];\n        for (let order of this.props.orders) {\n            const client = order.cliente ? this.props.clients.find((cliente) => cliente.id === order.cliente.id) : {};\n            const products = [];\n            if (order.produtos)\n                for (let product of order.produtos) {\n                    if (product.produto) {\n                        const info = product.produto ? this.props.products.find(item => item.id === product.produto.id) : null;\n                        if (info)\n                            products.push({\n                                nome: product.nome,\n                                quantidade: product.quantidade,\n                                valor: product.valorUnitario,\n                                info\n                            })\n                    }\n                }\n            orderElements.push(<OrderCard key={order.id}\n                                          id={order.id}\n                                          nome={client && client.nome}\n                                          endereco={client && client.endereco}\n                                          telefone={client && client.telefone}\n                                          total={order.valorTotal}\n                                          client={client && client.nome ? client : null}\n                                          data={order.data}\n                                          status={order.status}\n                                          failure={this.state.failureMap[order.id]}\n                                          loadProducts={order.produtos ? undefined : () => this.props.loadOrderProducts(order.id)}\n                                          onLeftClick={this.updateOrder}\n                                          onRightClick={() => this.deleteOrder(order.id)}\n                                          products={products}\n                                          clientOptions={this.props.clients}\n                                          productOptions={this.props.products}/>)\n        }\n        return orderElements;\n    }\n\n\n    render() {\n        const addStyle = {\n            width: 40,\n            height: 40,\n            backgroundColor: \"rgb(244, 117, 96)\",\n            boxShadow: \"0 3px 6px rgba(0, 0, 0, .16), 0 1px 2px rgba(0, 0, 0, .23)\"\n        };\n        return (\n            <div className=\"container\">\n                <div className=\"container-actions\">\n                    {!this.state.isAddingOrder &&\n                    <CircleButton style={addStyle} imgStyle={{height: 28, width: 28}} icon={addOrderIcon}\n                                  onClick={() => this.setState({isAddingOrder: true})}/>\n                    }\n                </div>\n                {this.state.isClientsLoaded && this.state.isProductsLoaded &&\n                <div className=\"card-list\">\n                    {this.state.isAddingOrder &&\n                    <OrderCard variant=\"create\"\n                               id=\"create_order\"\n                               clientOptions={this.props.clients}\n                               productOptions={this.props.products}\n                               failure={this.state.failureMap[\"create_order\"]}\n                               onLeftClick={this.createOrder}\n                               onRightClick={() => this.setState({isAddingOrder: false})}/>\n                    }\n                    {this.makeOrders()}\n                </div>}\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(OrderContainer);","import fetch from \"cross-fetch\";\n\nexport const FETCH_ORDERS_REQUEST = \"FETCH_ORDERS_REQUEST\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAILURE = \"FETCH_ORDERS_FAILURE\";\n\nexport const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\";\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\nexport const CREATE_ORDER_FAILURE = \"CREATE_ORDER_FAILURE\";\n\nexport const UPDATE_ORDER_REQUEST = \"UPDATE_ORDER_REQUEST\";\nexport const UPDATE_ORDER_SUCCESS = \"UPDATE_ORDER_SUCCESS\";\nexport const UPDATE_ORDER_FAILURE = \"UPDATE_ORDER_FAILURE\";\n\nexport const DELETE_ORDER_REQUEST = \"DELETE_ORDER_REQUEST\";\nexport const DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\";\nexport const DELETE_ORDER_FAILURE = \"DELETE_ORDER_FAILURE\";\n\nexport const FETCH_ORDER_REQUEST = \"FETCH_ORDER_REQUEST\";\nexport const FETCH_ORDER_SUCCESS = \"FETCH_ORDER_SUCCESS\";\nexport const FETCH_ORDER_FAILURE = \"FETCH_ORDER_FAILURE\";\n\nexport const fetchOrderFailure = message => ({\n    message,\n    type: FETCH_ORDER_FAILURE\n});\n\nexport const fetchOrderSuccess = order => ({\n    order,\n    type: FETCH_ORDER_SUCCESS\n});\n\nexport const fetchOrderRequest = () => ({\n    type: FETCH_ORDER_REQUEST\n});\nexport const deleteOrderFailure = message => ({\n    message,\n    type: DELETE_ORDER_FAILURE\n});\n\nexport const deleteOrderSuccess = id => ({\n    id,\n    type: DELETE_ORDER_SUCCESS\n});\n\nexport const deleteOrderRequest = () => ({\n    type: DELETE_ORDER_REQUEST\n});\n\nexport const updateOrderFailure = message => ({\n    message,\n    type: UPDATE_ORDER_FAILURE\n});\n\nexport const updateOrderSuccess = order => ({\n    order,\n    type: UPDATE_ORDER_SUCCESS\n});\n\nexport const updateOrderRequest = () => ({\n    type: UPDATE_ORDER_REQUEST\n});\n\nexport const createOrderFailure = message => ({\n    message,\n    type: CREATE_ORDER_FAILURE\n});\n\nexport const createOrderSuccess = order => ({\n    order,\n    type: CREATE_ORDER_SUCCESS\n});\n\nexport const createOrderRequest = () => ({\n    type: CREATE_ORDER_REQUEST\n});\n\nexport const fetchOrdersFailure = message => ({\n    message,\n    type: FETCH_ORDERS_FAILURE\n});\n\nexport const fetchOrdersSuccess = (orders, page) => ({\n    orders,\n    page,\n    type: FETCH_ORDERS_SUCCESS\n});\n\nexport const fetchOrdersRequest = () => ({\n    type: FETCH_ORDERS_REQUEST\n});\n\nexport const fetchOrders = page => dispatch => {\n    dispatch(fetchOrdersRequest());\n    return fetch(\"/api/pedidos\")\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(orders => dispatch(fetchOrdersSuccess(orders, page)))\n        .catch(error => dispatch(fetchOrdersFailure(error.message)));\n};\n\nexport const loadOrderProducts = id => dispatch => {\n    dispatch(fetchOrderRequest())\n    return fetch(`/api/pedidos/${id}`)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(order => dispatch(fetchOrderSuccess(order)))\n        .catch(error => dispatch(fetchOrderFailure(error.message)));\n}\n\nexport const createOrder = order => dispatch => {\n    dispatch(createOrderRequest());\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(order),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(\"/api/pedidos\", options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(createdOrder => {\n            dispatch(createOrderSuccess(createdOrder));\n            return createdOrder;\n        })\n        .catch(error => dispatch(createOrderFailure(error.message)));\n};\n\nexport const updateOrder = order => dispatch => {\n    if (!order)\n        return;\n    dispatch(updateOrderRequest());\n    const options = {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(order),\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/pedidos/${order.id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(order => dispatch(updateOrderSuccess(order)))\n        .catch(error => dispatch(updateOrderFailure(error.message)));\n};\n\nexport const deleteOrder = id => dispatch => {\n    if (!id && id !== 0)\n        return;\n    dispatch(deleteOrderRequest());\n    const options = {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    };\n    return fetch(`/api/pedidos/${id}`, options)\n        .then(response => {\n            if (response.ok)\n                return response.json();\n            else\n                throw new Error(response.json().message);\n        })\n        .then(() => dispatch(deleteOrderSuccess(id)))\n        .catch(error => dispatch(deleteOrderFailure(error.message)));\n};","import React from 'react';\nimport '../assets/components/App.css';\nimport Header from \"./Header\";\nimport {Route} from \"react-router-dom\";\nimport ClientContainer from \"../containers/ClientContainer\";\nimport ProductContainer from \"../containers/ProductContainer\";\nimport OrderContainer from \"../containers/OrderContainer\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header/>\n            <Route path={[\"/clientes\", \"/\"]} exact>\n                <ClientContainer/>\n            </Route>\n            <Route path=\"/produtos\">\n                <ProductContainer/>\n            </Route>\n            <Route path=\"/pedidos\">\n                <OrderContainer/>\n            </Route>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n    CREATE_CLIENT_SUCCESS,\n    DELETE_CLIENT_SUCCESS,\n    FETCH_CLIENTS_SUCCESS,\n    UPDATE_CLIENT_SUCCESS\n} from \"../actions/clientActions\";\n\nconst clientsReducer = (state = [], action) => {\n    let index;\n    switch (action.type) {\n        case FETCH_CLIENTS_SUCCESS:\n            return action.clients;\n        case CREATE_CLIENT_SUCCESS:\n            return [action.client, ...state]\n        case DELETE_CLIENT_SUCCESS:\n            index = state.findIndex(client => client.id === action.id);\n            if (index > -1) {\n                state.splice(index, 1)\n                return [...state];\n            }\n            return state;\n        case UPDATE_CLIENT_SUCCESS:\n            index = state.findIndex(client => client.id === action.client.id);\n            if (index > -1) {\n                state[index] = action.client\n                return [...state];\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default {clients: clientsReducer};","import {\n    CREATE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_SUCCESS,\n    FETCH_PRODUCTS_SUCCESS,\n    UPDATE_PRODUCT_SUCCESS\n} from \"../actions/productActions\";\n\nconst productsReducer = (state = [], action) => {\n    let index;\n    switch (action.type) {\n        case FETCH_PRODUCTS_SUCCESS:\n            return action.products;\n        case CREATE_PRODUCT_SUCCESS:\n            return [action.product, ...state]\n        case DELETE_PRODUCT_SUCCESS:\n            index = state.findIndex(product => product.id === action.id);\n            if (index > -1) {\n                state.splice(index, 1)\n                return [...state];\n            }\n            return state;\n        case UPDATE_PRODUCT_SUCCESS:\n            index = state.findIndex(product => product.id === action.product.id);\n            if (index > -1) {\n                state[index] = action.product\n                return [...state];\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\nexport default {products: productsReducer};","import {\n    CREATE_ORDER_SUCCESS,\n    DELETE_ORDER_SUCCESS,\n    FETCH_ORDER_SUCCESS,\n    FETCH_ORDERS_SUCCESS,\n    UPDATE_ORDER_SUCCESS\n} from \"../actions/orderActions\";\n\nconst ordersReducer = (state = [], action) => {\n    let index;\n    switch (action.type) {\n        case FETCH_ORDERS_SUCCESS:\n            return action.orders;\n        case FETCH_ORDER_SUCCESS:\n        case UPDATE_ORDER_SUCCESS:\n            index = state.findIndex(order => order.id === action.order.id);\n            if (index > -1) {\n                state[index] = action.order;\n                return [...state];\n            }\n            return state;\n        case DELETE_ORDER_SUCCESS:\n            index = state.findIndex(order => order.id === action.id);\n            if (index > -1) {\n                state.splice(index, 1);\n                return [...state];\n            }\n            return state;\n        case CREATE_ORDER_SUCCESS:\n            state.unshift(action.order);\n            return [...state];\n        default:\n            return state;\n    }\n}\n\nexport default {\n    orders: ordersReducer\n};","import {combineReducers} from \"redux\";\nimport clientReducer from \"./clientReducer\";\nimport productReducer from \"./productReducer\";\nimport orderReducer from \"./orderReducer\";\n\nconst reducers = {...productReducer,...orderReducer,...clientReducer};\n\nexport default combineReducers(reducers);","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from './reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configureStore(preloadedState) {\n    return createStore(\n        rootReducer,\n        preloadedState,\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\n    )\n};","import {createMuiTheme} from '@material-ui/core/styles';\n\nconst theme = {\n    palette: {\n        primary: {\n            main: \"#30665D\", //rgb(97, 205, 187)\n        },\n        secondary: {\n            main: \"#7A3B30\", //rgb(244, 117, 96)\n        },\n        primaryAlternative: {\n            main: \"rgb(232, 168, 56)\" //rgb(232, 168, 56)\n        },\n        secondaryAlternative: {\n            main: \"rgb(241, 225, 91)\" //rgb(241, 225, 91)\n        }\n    },\n};\n\nexport default createMuiTheme(theme);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from \"./configureStore\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from \"./assets/theme\";\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <ThemeProvider theme={theme}>\n                <App/>\n            </ThemeProvider>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete.d496be2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit.0353934b.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.b41beb37.svg\";","module.exports = __webpack_public_path__ + \"static/media/addClient.7f864922.svg\";","module.exports = __webpack_public_path__ + \"static/media/addProduct.7ac3613f.svg\";","module.exports = __webpack_public_path__ + \"static/media/expand.c62920fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/client.939e35c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/addOrder.93feb6d2.svg\";"],"sourceRoot":""}